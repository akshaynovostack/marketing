/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  WhatsAppMessage as PrismaWhatsAppMessage,
} from "@prisma/client";
import { WhatsAppMessageCreateInput } from "./WhatsAppMessageCreateInput";

export class WhatsAppMessageServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WhatsAppMessageCountArgs, "select">
  ): Promise<number> {
    return this.prisma.whatsAppMessage.count(args);
  }

  async whatsAppMessages<T extends Prisma.WhatsAppMessageFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.WhatsAppMessageFindManyArgs>
  ): Promise<PrismaWhatsAppMessage[]> {
    return this.prisma.whatsAppMessage.findMany<Prisma.WhatsAppMessageFindManyArgs>(
      args
    );
  }
  async whatsAppMessage<T extends Prisma.WhatsAppMessageFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.WhatsAppMessageFindUniqueArgs>
  ): Promise<PrismaWhatsAppMessage | null> {
    return this.prisma.whatsAppMessage.findUnique(args);
  }
  async createWhatsAppMessage<T extends Prisma.WhatsAppMessageCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WhatsAppMessageCreateArgs>
  ): Promise<PrismaWhatsAppMessage> {
    return this.prisma.whatsAppMessage.create<T>(args);
  }
  async updateWhatsAppMessage<T extends Prisma.WhatsAppMessageUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.WhatsAppMessageUpdateArgs>
  ): Promise<PrismaWhatsAppMessage> {
    return this.prisma.whatsAppMessage.update<T>(args);
  }
  async deleteWhatsAppMessage<T extends Prisma.WhatsAppMessageDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.WhatsAppMessageDeleteArgs>
  ): Promise<PrismaWhatsAppMessage> {
    return this.prisma.whatsAppMessage.delete(args);
  }
  async SendMessageWhatsApp(args: WhatsAppMessageCreateInput): Promise<string> {
    throw new Error("Not implemented");
  }
  async SendWhatsAppMessage(args: string): Promise<string> {
    throw new Error("Not implemented");
  }
}
